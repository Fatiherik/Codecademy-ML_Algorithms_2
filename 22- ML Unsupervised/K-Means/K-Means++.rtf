{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red164\green191\blue255;\red23\green23\blue23;\red255\green255\blue255;
\red252\green115\blue96;\red117\green255\blue242;\red254\green219\blue112;\red129\green131\blue134;}
{\*\expandedcolortbl;;\cssrgb\c70196\c80000\c100000;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c100000\c87843\c51373;\cssrgb\c57647\c58431\c59608;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh17700\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 matplotlib\cf4 \strokec4 .\cf6 \strokec6 pyplot\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 numpy\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 pandas\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 pd\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 cluster\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 KMeans\cf4 \cb1 \strokec4 \
\
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 random\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 timeit\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 mu\cf4 \strokec4  = \cf5 \strokec5 1\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 std\cf4 \strokec4  = \cf5 \strokec5 0.5\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 seed\cf4 \strokec4 (\cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 xs\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.25\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 ), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.75\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 )), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.25\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 )), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.75\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 ))\cb1 \
\
\cf5 \cb3 \strokec5 ys\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 append\cf4 \strokec4 (\cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.25\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 ), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.25\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 )), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.75\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 )), \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 random\cf5 \strokec5 .\cf6 \strokec6 normal\cf4 \strokec4 (\cf5 \strokec5 0.75\cf4 \strokec4 ,\cf5 \strokec5 std\cf4 \strokec4 ,\cf5 \strokec5 100\cf4 \strokec4 ))\cb1 \
\
\cf5 \cb3 \strokec5 values\cf4 \strokec4  = list(zip(\cf5 \strokec5 xs\cf4 \strokec4 , \cf5 \strokec5 ys\cf4 \strokec4 ))\cb1 \
\
\
\
\cf5 \cb3 \strokec5 model\cf4 \strokec4  = \cf5 \strokec5 KMeans\cf4 \strokec4 (\cf5 \strokec5 init\cf4 \strokec4 =\cf7 \strokec7 'random'\cf4 \strokec4 , \cf5 \strokec5 n_clusters\cf4 \strokec4 =\cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 results\cf4 \strokec4  = \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 fit_predict\cf4 \strokec4 (\cf5 \strokec5 values\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf7 \strokec7 "The inertia of model that randomly initialized centroids is "\cf4 \strokec4  + str(\cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 inertia_\cf4 \strokec4 ))\cb1 \
\
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 colors\cf4 \strokec4  = [\cf7 \strokec7 '#6400e4'\cf4 \strokec4 , \cf7 \strokec7 '#ffc740'\cf4 \strokec4 ]\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplot\cf4 \strokec4 (\cf5 \strokec5 211\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  range(\cf5 \strokec5 2\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 points\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 ([\cf5 \strokec5 values\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ] \cf2 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  range(len(\cf5 \strokec5 values\cf4 \strokec4 )) \cf2 \strokec2 if\cf4 \strokec4  \cf5 \strokec5 results\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ] == \cf5 \strokec5 i\cf4 \strokec4 ])\cb1 \
\cb3   \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 [:, \cf5 \strokec5 0\cf4 \strokec4 ], \cf5 \strokec5 points\cf4 \strokec4 [:, \cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 c\cf4 \strokec4 =\cf5 \strokec5 colors\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ], \cf5 \strokec5 alpha\cf4 \strokec4 =\cf5 \strokec5 0.6\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 title\cf4 \strokec4 (\cf7 \strokec7 'Codecademy Mobile Feedback - Centroids Initialized Randomly'\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 xlabel\cf4 \strokec4 (\cf7 \strokec7 'Learn Python'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 ylabel\cf4 \strokec4 (\cf7 \strokec7 'Learn SQL'\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplot\cf4 \strokec4 (\cf5 \strokec5 212\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 model\cf4 \strokec4  = \cf5 \strokec5 KMeans\cf4 \strokec4 ( \cf5 \strokec5 n_clusters\cf4 \strokec4 =\cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 results\cf4 \strokec4  = \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 fit_predict\cf4 \strokec4 (\cf5 \strokec5 values\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf7 \strokec7 "The inertia of model that initialized the centroids using KMeans++ is "\cf4 \strokec4  + str(\cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 inertia_\cf4 \strokec4 ))\cb1 \
\
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 colors\cf4 \strokec4  = [\cf7 \strokec7 '#6400e4'\cf4 \strokec4 , \cf7 \strokec7 '#ffc740'\cf4 \strokec4 ]\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 i\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  range(\cf5 \strokec5 2\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 points\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 ([\cf5 \strokec5 values\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ] \cf2 \strokec2 for\cf4 \strokec4  \cf5 \strokec5 j\cf4 \strokec4  \cf2 \strokec2 in\cf4 \strokec4  range(len(\cf5 \strokec5 values\cf4 \strokec4 )) \cf2 \strokec2 if\cf4 \strokec4  \cf5 \strokec5 results\cf4 \strokec4 [\cf5 \strokec5 j\cf4 \strokec4 ] == \cf5 \strokec5 i\cf4 \strokec4 ])\cb1 \
\cb3   \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 points\cf4 \strokec4 [:, \cf5 \strokec5 0\cf4 \strokec4 ], \cf5 \strokec5 points\cf4 \strokec4 [:, \cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 c\cf4 \strokec4 =\cf5 \strokec5 colors\cf4 \strokec4 [\cf5 \strokec5 i\cf4 \strokec4 ], \cf5 \strokec5 alpha\cf4 \strokec4 =\cf5 \strokec5 0.6\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 title\cf4 \strokec4 (\cf7 \strokec7 'Codecademy Mobile Feedback - Centroids Initialized Using KMeans++'\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 xlabel\cf4 \strokec4 (\cf7 \strokec7 'Learn Python'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 ylabel\cf4 \strokec4 (\cf7 \strokec7 'Learn SQL'\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 tight_layout\cf4 \strokec4 ()\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 show\cf4 \strokec4 ()\
\
\'97\cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 matplotlib\cf4 \strokec4 .\cf6 \strokec6 pyplot\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 numpy\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 datasets\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 copy\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 deepcopy\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 cluster\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 KMeans\cf4 \strokec4  \cb1 \
\
\cf5 \cb3 \strokec5 x\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 ]\cb1 \
\cf5 \cb3 \strokec5 y\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 ]\cb1 \
\
\cf5 \cb3 \strokec5 values\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (list(zip(\cf5 \strokec5 x\cf4 \strokec4 , \cf5 \strokec5 y\cf4 \strokec4 )))\cb1 \
\
\cf5 \cb3 \strokec5 centroids_x\cf4 \strokec4  = [\cf5 \strokec5 2.5\cf4 \strokec4 , \cf5 \strokec5 2.5\cf4 \strokec4 ]\cb1 \
\cf5 \cb3 \strokec5 centroids_y\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 ]\cb1 \
\
\cf5 \cb3 \strokec5 centroids\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (list(zip(\cf5 \strokec5 centroids_x\cf4 \strokec4 , \cf5 \strokec5 centroids_y\cf4 \strokec4 )))\cb1 \
\
\cf5 \cb3 \strokec5 model\cf4 \strokec4  = \cf5 \strokec5 KMeans\cf4 \strokec4 (\cf5 \strokec5 init\cf4 \strokec4 =\cf5 \strokec5 centroids\cf4 \strokec4 , \cf5 \strokec5 n_clusters\cf4 \strokec4 =\cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\
\cf8 \cb3 \strokec8 # Initial centroids\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 # plt.scatter(centroids[:, 0], centroids[:, 1], marker='D', s=100)\cf4 \cb1 \strokec4 \
\
\cf5 \cb3 \strokec5 results\cf4 \strokec4  = \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 fit_predict\cf4 \strokec4 (\cf5 \strokec5 values\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 x\cf4 \strokec4 , \cf5 \strokec5 y\cf4 \strokec4 , \cf5 \strokec5 c\cf4 \strokec4 =\cf5 \strokec5 results\cf4 \strokec4 , \cf5 \strokec5 alpha\cf4 \strokec4 =\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\
\cf8 \cb3 \strokec8 # Cluster centers\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 cluster_centers_\cf4 \strokec4 [:, \cf5 \strokec5 0\cf4 \strokec4 ], \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 cluster_centers_\cf4 \strokec4 [:, \cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 marker\cf4 \strokec4 =\cf7 \strokec7 'v'\cf4 \strokec4 , \cf5 \strokec5 s\cf4 \strokec4 =\cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 ax\cf4 \strokec4  = \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplot\cf4 \strokec4 ()\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_xticks\cf4 \strokec4 ([\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 , \cf5 \strokec5 5\cf4 \strokec4 ])\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_yticks\cf4 \strokec4 ([\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 ])\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 title\cf4 \strokec4 (\cf7 \strokec7 'Unlucky Initialization'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 show\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \
\'97\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 codecademylib3_seaborn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 def warn\cf4 \strokec4 (*\cf5 \strokec5 args\cf4 \strokec4 , **\cf5 \strokec5 kwargs\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 pass\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 warnings\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 warnings\cf4 \strokec4 .\cf6 \strokec6 warn\cf4 \strokec4  = \cf5 \strokec5 warn\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 matplotlib\cf4 \strokec4 .\cf6 \strokec6 pyplot\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 plt\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 numpy\cf4 \strokec4  \cf2 \strokec2 as\cf4 \strokec4  \cf5 \strokec5 np\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 datasets\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 copy\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 deepcopy\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 from\cf4 \strokec4  \cf5 \strokec5 sklearn\cf4 \strokec4 .\cf6 \strokec6 cluster\cf4 \strokec4  \cf2 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 KMeans\cf4 \strokec4  \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 x\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 ]\cb1 \
\cf5 \cb3 \strokec5 y\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 ]\cb1 \
\
\cf5 \cb3 \strokec5 values\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (list(zip(\cf5 \strokec5 x\cf4 \strokec4 , \cf5 \strokec5 y\cf4 \strokec4 )))\cb1 \
\
\cf5 \cb3 \strokec5 centroids_x\cf4 \strokec4  = [\cf5 \strokec5 2.5\cf4 \strokec4 , \cf5 \strokec5 2.5\cf4 \strokec4 ]\cb1 \
\cf5 \cb3 \strokec5 centroids_y\cf4 \strokec4  = [\cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 ]\cb1 \
\
\cf5 \cb3 \strokec5 centroids\cf4 \strokec4  = \cf5 \strokec5 np\cf4 \strokec4 .\cf6 \strokec6 array\cf4 \strokec4 (list(zip(\cf5 \strokec5 centroids_x\cf4 \strokec4 , \cf5 \strokec5 centroids_y\cf4 \strokec4 )))\cb1 \
\
\cf5 \cb3 \strokec5 model\cf4 \strokec4  = \cf5 \strokec5 KMeans\cf4 \strokec4 (\cf5 \strokec5 init\cf4 \strokec4 =\cf7 \strokec7 'k-means++'\cf4 \strokec4 , \cf5 \strokec5 n_clusters\cf4 \strokec4 =\cf5 \strokec5 2\cf4 \strokec4 )\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf8 \cb3 \strokec8 # Initial centroids\cf4 \cb1 \strokec4 \
\cf8 \cb3 \strokec8 # plt.scatter(centroids[:, 0], centroids[:, 1], marker='D', s=100)\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 results\cf4 \strokec4  = \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 fit_predict\cf4 \strokec4 (\cf5 \strokec5 values\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 x\cf4 \strokec4 , \cf5 \strokec5 y\cf4 \strokec4 , \cf5 \strokec5 c\cf4 \strokec4 =\cf5 \strokec5 results\cf4 \strokec4 , \cf5 \strokec5 alpha\cf4 \strokec4 =\cf5 \strokec5 1\cf4 \strokec4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf8 \cb3 \strokec8 # Cluster centers\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 scatter\cf4 \strokec4 (\cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 cluster_centers_\cf4 \strokec4 [:, \cf5 \strokec5 0\cf4 \strokec4 ], \cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 cluster_centers_\cf4 \strokec4 [:, \cf5 \strokec5 1\cf4 \strokec4 ], \cf5 \strokec5 marker\cf4 \strokec4 =\cf7 \strokec7 'v'\cf4 \strokec4 , \cf5 \strokec5 s\cf4 \strokec4 =\cf5 \strokec5 100\cf4 \strokec4 )\cb1 \
\
\cf5 \cb3 \strokec5 ax\cf4 \strokec4  = \cf5 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 subplot\cf4 \strokec4 ()\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_xticks\cf4 \strokec4 ([\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 , \cf5 \strokec5 5\cf4 \strokec4 ])\cb1 \
\cf5 \cb3 \strokec5 ax\cf4 \strokec4 .\cf6 \strokec6 set_yticks\cf4 \strokec4 ([\cf5 \strokec5 0\cf4 \strokec4 , \cf5 \strokec5 1\cf4 \strokec4 , \cf5 \strokec5 2\cf4 \strokec4 , \cf5 \strokec5 3\cf4 \strokec4 , \cf5 \strokec5 4\cf4 \strokec4 ])\cb1 \
\
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 title\cf4 \strokec4 (\cf7 \strokec7 'K-Means++ Initialization'\cf4 \strokec4 )\cb1 \
\cf5 \cb3 \strokec5 plt\cf4 \strokec4 .\cf6 \strokec6 show\cf4 \strokec4 ()\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf7 \strokec7 "The model's inertia is "\cf4 \strokec4  + str(\cf5 \strokec5 model\cf4 \strokec4 .\cf6 \strokec6 inertia_\cf4 \strokec4 ))\cb1 \
}