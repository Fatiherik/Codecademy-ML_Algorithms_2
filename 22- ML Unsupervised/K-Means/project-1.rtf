â€” import codecademylib3_seaborn
import numpy as np
from matplotlib import pyplot as plt
from sklearn import datasets
from sklearn.cluster import KMeans

digits=datasets.load_digits()
#print(digits)
#print(digits.DESCR)
#print(digits.data)
#print(len(digits.data))
#print(digits.target)

# Figure size (width, height)

fig = plt.figure(figsize=(6, 6))

# Adjust the subplots 

fig.subplots_adjust(left=0, right=1, bottom=0, top=1, hspace=0.05, wspace=0.05)

# For each of the 64 images

for i in range(64):

    # Initialize the subplots: add a subplot in the grid of 8 by 8, at the i+1-th position

    ax = fig.add_subplot(8, 8, i+1, xticks=[], yticks=[])

    # Display an image at the i-th position

    ax.imshow(digits.images[i], cmap=plt.cm.binary, interpolation='nearest')

    # Label the image with the target value

    ax.text(0, 7, str(digits.target[i]))

plt.show()

model=KMeans(n_clusters=10, random_state=42)
model.fit(digits.data)

fig = plt.figure(figsize=(8, 3))

fig.suptitle('Cluser Center Images', fontsize=14, fontweight='bold')

for i in range(10):

  # Initialize subplots in a grid of 2X5, at i+1th position
  ax = fig.add_subplot(2, 5, 1 + i)

  # Display images
  ax.imshow(model.cluster_centers_[i].reshape((8, 8)), cmap=plt.cm.binary)

plt.show()

new_samples=np.array([
[0.00,2.97,5.03,5.34,1.75,0.00,0.00,0.00,3.81,7.62,6.64,6.94,7.40,1.68,0.00,0.00,6.71,5.57,0.08,0.76,6.79,6.71,0.15,0.00,6.86,4.12,0.00,0.00,2.36,7.62,2.37,0.00,5.79,6.86,0.38,0.00,0.23,7.32,4.35,0.00,2.14,7.63,4.50,0.00,0.69,7.02,4.50,0.00,0.00,4.35,7.62,5.64,7.17,7.47,2.14,0.00,0.00,0.23,4.43,5.34,5.03,1.37,0.00,0.00],
[0.00,0.00,0.31,4.35,0.99,0.00,0.00,0.00,0.00,0.00,4.88,7.62,3.97,0.00,0.00,0.00,0.00,2.37,7.62,7.55,5.95,0.00,0.00,0.00,0.00,2.60,5.26,4.27,7.55,0.23,0.00,0.00,0.00,0.00,0.00,2.52,7.62,0.76,0.00,0.00,0.00,0.00,0.00,2.29,7.62,0.76,0.00,0.00,0.00,0.00,0.00,2.29,7.63,0.76,0.00,0.00,0.00,0.00,0.00,0.23,2.06,0.00,0.00,0.00],
[0.00,2.59,5.03,0.00,0.00,0.00,0.00,0.00,0.00,3.81,6.86,0.00,0.00,0.00,0.00,0.00,0.00,3.81,6.86,1.15,5.11,0.31,0.00,0.00,0.00,4.35,6.79,2.21,7.62,1.68,0.00,0.00,0.00,4.88,6.25,1.83,7.62,3.13,0.00,0.00,0.00,5.34,7.62,7.62,7.62,6.71,0.00,0.00,0.00,1.15,2.29,2.29,6.41,5.34,0.00,0.00,0.00,0.00,0.00,0.00,3.82,3.82,0.00,0.00],
[0.00,2.29,4.80,6.02,6.86,6.03,0.00,0.00,0.00,4.57,7.32,5.57,4.35,4.12,0.00,0.00,0.00,4.35,7.17,0.00,0.00,0.00,0.00,0.00,0.00,3.28,7.63,6.10,4.88,0.08,0.00,0.00,0.00,2.59,7.25,5.87,7.62,1.38,0.00,0.00,0.00,0.00,0.00,2.21,7.62,1.52,0.00,0.00,0.00,4.88,4.12,6.71,7.02,0.84,0.00,0.00,0.00,5.95,6.86,6.56,1.98,0.00,0.00,0.00]
])

new_labels=model.predict(new_samples)
#print(new_labels)

for i in range(len(new_labels)):
  if new_labels[i] == 0:
    print(0, end='')
  elif new_labels[i] == 1:
    print(9, end='')
  elif new_labels[i] == 2:
    print(2, end='')
  elif new_labels[i] == 3:
    print(1, end='')
  elif new_labels[i] == 4:
    print(6, end='')
  elif new_labels[i] == 5:
    print(8, end='')
  elif new_labels[i] == 6:
    print(4, end='')
  elif new_labels[i] == 7:
    print(5, end='')
  elif new_labels[i] == 8:
    print(7, end='')
  elif new_labels[i] == 9:
    print(3, end='')

