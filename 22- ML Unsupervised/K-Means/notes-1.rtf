{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red164\green191\blue255;\red23\green23\blue23;\red255\green255\blue255;
\red252\green115\blue96;\red117\green255\blue242;\red129\green131\blue134;\red254\green219\blue112;}
{\*\expandedcolortbl;;\cssrgb\c70196\c80000\c100000;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c100000\c53725\c45098;\cssrgb\c51373\c100000\c96078;\cssrgb\c57647\c58431\c59608;\cssrgb\c100000\c87843\c51373;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28300\viewh14800\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \'97 
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 numpy\cf4  \cf2 as\cf4  \cf5 np\cf4  \cb1 \
\
\cf2 \cb3 from\cf4  \cf5 os\cf4 .\cf6 path\cf4  \cf2 import\cf4  \cf5 join\cf4 , \cf5 dirname\cf4 , \cf5 abspath\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 mpl_toolkits\cf4 .\cf6 mplot3d\cf4  \cf2 import\cf4  \cf5 Axes3D\cf4 \cb1 \
\
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 x\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\cf5 \cb3 y\cf4  = \cf5 iris\cf4 .\cf6 target\cf4 \cb1 \
\
\cf5 \cb3 fignum\cf4  = \cf5 1\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Plot the ground truthd\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 fig\cf4  = \cf5 plt\cf4 .\cf6 figure\cf4 (\cf5 fignum\cf4 , \cf5 figsize\cf4 =(\cf5 4\cf4 , \cf5 3\cf4 ))\cb1 \
\
\cf5 \cb3 ax\cf4  = \cf5 Axes3D\cf4 (\cf5 fig\cf4 , \cf5 rect\cf4 =[\cf5 0\cf4 , \cf5 0\cf4 , \cf5 .95\cf4 , \cf5 1\cf4 ], \cf5 elev\cf4 =\cf5 48\cf4 , \cf5 azim\cf4 =\cf5 134\cf4 )\cb1 \
\
\cf2 \cb3 for\cf4  \cf5 name\cf4 , \cf5 label\cf4  \cf2 in\cf4  [(\cf8 'Zombies'\cf4 , \cf5 0\cf4 ),\cb1 \
\cb3                     (\cf8 'Programmers'\cf4 , \cf5 1\cf4 ),\cb1 \
\cb3                     (\cf8 'Vampires'\cf4 , \cf5 2\cf4 )]:\cb1 \
\cb3     \cf5 ax\cf4 .\cf6 text3D\cf4 (\cf5 x\cf4 [\cf5 y\cf4  == \cf5 label\cf4 , \cf5 3\cf4 ].\cf6 mean\cf4 (),\cb1 \
\cb3               \cf5 x\cf4 [\cf5 y\cf4  == \cf5 label\cf4 , \cf5 0\cf4 ].\cf6 mean\cf4 (),\cb1 \
\cb3               \cf5 x\cf4 [\cf5 y\cf4  == \cf5 label\cf4 , \cf5 2\cf4 ].\cf6 mean\cf4 () + \cf5 2\cf4 , \cf5 name\cf4 ,\cb1 \
\cb3               \cf5 horizontalalignment\cf4 =\cf8 'center'\cf4 ,\cb1 \
\cb3               \cf5 bbox\cf4 =dict(\cf5 alpha\cf4 =\cf5 .2\cf4 , \cf5 edgecolor\cf4 =\cf8 'w'\cf4 , \cf5 facecolor\cf4 =\cf8 'w'\cf4 ))\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Reorder the labels to have colors matching the cluster results\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 y\cf4  = \cf5 np\cf4 .\cf6 choose\cf4 (\cf5 y\cf4 , [\cf5 1\cf4 , \cf5 2\cf4 , \cf5 0\cf4 ]).\cf6 astype\cf4 (\cf5 np\cf4 .\cf6 float\cf4 )\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 scatter\cf4 (\cf5 x\cf4 [:, \cf5 3\cf4 ], \cf5 x\cf4 [:, \cf5 0\cf4 ], \cf5 x\cf4 [:, \cf5 2\cf4 ], \cf5 c\cf4 =\cf5 y\cf4 , \cf5 edgecolor\cf4 =\cf8 'k'\cf4 )\cb1 \
\
\cf5 \cb3 ax\cf4 .\cf6 w_xaxis\cf5 .\cf6 set_ticklabels\cf4 ([])\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 w_yaxis\cf5 .\cf6 set_ticklabels\cf4 ([])\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 w_zaxis\cf5 .\cf6 set_ticklabels\cf4 ([])\cb1 \
\
\cf5 \cb3 ax\cf4 .\cf6 set_xlabel\cf4 (\cf8 'hates sunlight'\cf4 )\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 set_ylabel\cf4 (\cf8 'likes garlic'\cf4 )\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 set_zlabel\cf4 (\cf8 'canine teeth (in)'\cf4 )\cb1 \
\
\cf5 \cb3 ax\cf4 .\cf6 set_title\cf4 (\cf8 ''\cf4 )\cb1 \
\cf5 \cb3 ax\cf4 .\cf6 dist\cf4  = \cf5 12\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Add code here:\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 plt\cf4 .\cf6 show\cf4 ()\cb1 \
\
\'97\cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Store iris.data\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 samples\cf4 =\cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Create x and y\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 x\cf4 =\cf5 samples\cf4 [:,\cf5 0\cf4 ]\cb1 \
\cf5 \cb3 y\cf4 =\cf5 samples\cf4 [:,\cf5 1\cf4 ]\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Plot x and y\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 plt\cf4 .\cf6 scatter\cf4 (\cf5 x\cf4 ,\cf5 y\cf4 , \cf5 alpha\cf4 =\cf5 0.5\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 xlabel\cf4 (\cf8 'sepal length (cm)'\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 ylabel\cf4 (\cf8 'sepal width (cm)'\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Show the plot\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 plt\cf4 .\cf6 show\cf4 ()\cb1 \
\
\'97\cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 numpy\cf4  \cf2 as\cf4  \cf5 np\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 copy\cf4  \cf2 import\cf4  \cf5 deepcopy\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\cf5 \cb3 x\cf4  = \cf5 samples\cf4 [:,\cf5 0\cf4 ]\cb1 \
\cf5 \cb3 y\cf4  = \cf5 samples\cf4 [:,\cf5 1\cf4 ]\cb1 \
\
\cf5 \cb3 sepal_length_width\cf4  = \cf5 np\cf4 .\cf6 array\cf4 (list(zip(\cf5 x\cf4 , \cf5 y\cf4 )))\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Step 1: Place K random centroids\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 k\cf4  = \cf5 3\cf4 \cb1 \
\
\cf5 \cb3 centroids_x\cf4  = \cf5 np\cf4 .\cf6 random\cf5 .\cf6 uniform\cf4 (min(\cf5 x\cf4 ), max(\cf5 x\cf4 ), \cf5 size\cf4 =\cf5 k\cf4 )\cb1 \
\cf5 \cb3 centroids_y\cf4  = \cf5 np\cf4 .\cf6 random\cf5 .\cf6 uniform\cf4 (min(\cf5 y\cf4 ), max(\cf5 y\cf4 ), \cf5 size\cf4 =\cf5 k\cf4 )\cb1 \
\
\cf5 \cb3 centroids\cf4  = \cf5 np\cf4 .\cf6 array\cf4 (list(zip(\cf5 centroids_x\cf4 , \cf5 centroids_y\cf4 )))\cb1 \
\
\cf2 \cb3 def distance\cf4 (\cf5 a\cf4 , \cf5 b\cf4 ):\cb1 \
\cb3   \cf5 one\cf4  = (\cf5 a\cf4 [\cf5 0\cf4 ] - \cf5 b\cf4 [\cf5 0\cf4 ]) ** \cf5 2\cf4 \cb1 \
\cb3   \cf5 two\cf4  = (\cf5 a\cf4 [\cf5 1\cf4 ] - \cf5 b\cf4 [\cf5 1\cf4 ]) ** \cf5 2\cf4 \cb1 \
\cb3   \cf5 distance\cf4  = (\cf5 one\cf4  + \cf5 two\cf4 ) ** \cf5 0.5\cf4 \cb1 \
\cb3   \cf2 return\cf4  \cf5 distance\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # To store the value of centroids when it updates\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 centroids_old\cf4  = \cf5 np\cf4 .\cf6 zeros\cf4 (\cf5 centroids\cf4 .\cf6 shape\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Cluster labeles (either 0, 1, or 2)\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 labels\cf4  = \cf5 np\cf4 .\cf6 zeros\cf4 (len(\cf5 samples\cf4 ))\cb1 \
\
\cf5 \cb3 distances\cf4  = \cf5 np\cf4 .\cf6 zeros\cf4 (\cf5 3\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Initialize error:\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 error\cf4  = \cf5 np\cf4 .\cf6 zeros\cf4 (\cf5 3\cf4 )\cb1 \
\cf5 \cb3 error\cf4 [\cf5 0\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 0\cf4 ], \cf5 centroids_old\cf4 [\cf5 0\cf4 ])\cb1 \
\cf5 \cb3 error\cf4 [\cf5 1\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 1\cf4 ], \cf5 centroids_old\cf4 [\cf5 1\cf4 ])\cb1 \
\cf5 \cb3 error\cf4 [\cf5 2\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 2\cf4 ], \cf5 centroids_old\cf4 [\cf5 2\cf4 ])\cb1 \
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Repeat Steps 2 and 3 until convergence:\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 while\cf4  \cf5 error\cf4 .\cf6 all\cf4 () \cf5 !\cf4 = \cf5 0\cf4 :\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Step 2: Assign samples to nearest centroid\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf2 for\cf4  \cf5 i\cf4  \cf2 in\cf4  range(len(\cf5 samples\cf4 )):\cb1 \
\cb3     \cf5 distances\cf4 [\cf5 0\cf4 ] = \cf5 distance\cf4 (\cf5 sepal_length_width\cf4 [\cf5 i\cf4 ], \cf5 centroids\cf4 [\cf5 0\cf4 ])\cb1 \
\cb3     \cf5 distances\cf4 [\cf5 1\cf4 ] = \cf5 distance\cf4 (\cf5 sepal_length_width\cf4 [\cf5 i\cf4 ], \cf5 centroids\cf4 [\cf5 1\cf4 ])\cb1 \
\cb3     \cf5 distances\cf4 [\cf5 2\cf4 ] = \cf5 distance\cf4 (\cf5 sepal_length_width\cf4 [\cf5 i\cf4 ], \cf5 centroids\cf4 [\cf5 2\cf4 ])\cb1 \
\cb3     \cf5 cluster\cf4  = \cf5 np\cf4 .\cf6 argmin\cf4 (\cf5 distances\cf4 )\cb1 \
\cb3     \cf5 labels\cf4 [\cf5 i\cf4 ] = \cf5 cluster\cf4 \cb1 \
\
\cb3   \cf7 # Step 3: Update centroids\cf4 \cb1 \
\
\cb3   \cf5 centroids_old\cf4  = \cf5 deepcopy\cf4 (\cf5 centroids\cf4 )\cb1 \
\
\cb3   \cf2 for\cf4  \cf5 i\cf4  \cf2 in\cf4  range(\cf5 3\cf4 ):\cb1 \
\cb3     \cf5 points\cf4  = [\cf5 sepal_length_width\cf4 [\cf5 j\cf4 ] \cf2 for\cf4  \cf5 j\cf4  \cf2 in\cf4  range(len(\cf5 sepal_length_width\cf4 )) \cf2 if\cf4  \cf5 labels\cf4 [\cf5 j\cf4 ] == \cf5 i\cf4 ]\cb1 \
\cb3     \cf5 centroids\cf4 [\cf5 i\cf4 ] = \cf5 np\cf4 .\cf6 mean\cf4 (\cf5 points\cf4 , \cf5 axis\cf4 =\cf5 0\cf4 )\cb1 \
\
\cb3   \cf5 error\cf4 [\cf5 0\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 0\cf4 ], \cf5 centroids_old\cf4 [\cf5 0\cf4 ])\cb1 \
\cb3   \cf5 error\cf4 [\cf5 1\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 1\cf4 ], \cf5 centroids_old\cf4 [\cf5 1\cf4 ])\cb1 \
\cb3   \cf5 error\cf4 [\cf5 2\cf4 ] = \cf5 distance\cf4 (\cf5 centroids\cf4 [\cf5 2\cf4 ], \cf5 centroids_old\cf4 [\cf5 2\cf4 ])\cb1 \
\
\cf5 \cb3 colors\cf4  = [\cf8 'r'\cf4 , \cf8 'g'\cf4 , \cf8 'b'\cf4 ]\cb1 \
\
\cf2 \cb3 for\cf4  \cf5 i\cf4  \cf2 in\cf4  range(\cf5 k\cf4 ):\cb1 \
\cb3   \cf5 points\cf4  = \cf5 np\cf4 .\cf6 array\cf4 ([\cf5 sepal_length_width\cf4 [\cf5 j\cf4 ] \cf2 for\cf4  \cf5 j\cf4  \cf2 in\cf4  range(len(\cf5 samples\cf4 )) \cf2 if\cf4  \cf5 labels\cf4 [\cf5 j\cf4 ] == \cf5 i\cf4 ])\cb1 \
\cb3   \cb1 \
\cb3   \cf5 plt\cf4 .\cf6 scatter\cf4 (\cf5 points\cf4 [:, \cf5 0\cf4 ], \cf5 points\cf4 [:, \cf5 1\cf4 ], \cf5 c\cf4 =\cf5 colors\cf4 [\cf5 i\cf4 ], \cf5 alpha\cf4 =\cf5 0.5\cf4 )\cb1 \
\cb3     \cb1 \
\cf5 \cb3 plt\cf4 .\cf6 scatter\cf4 (\cf5 centroids\cf4 [:, \cf5 0\cf4 ], \cf5 centroids\cf4 [:, \cf5 1\cf4 ], \cf5 marker\cf4 =\cf8 'D'\cf4 , \cf5 s\cf4 =\cf5 150\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 xlabel\cf4 (\cf8 'sepal length (cm)'\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 ylabel\cf4 (\cf8 'sepal width (cm)'\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 show\cf4 ()\cb1 \
\
\'97 \cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # From sklearn.cluster, import KMeans class\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Use KMeans() to create a model that finds 3 clusters\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 model\cf4  = \cf5 KMeans\cf4 (\cf5 n_clusters\cf4  = \cf5 3\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Use .fit() to fit the model to samples\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 model\cf4 .\cf6 fit\cf4 (\cf5 samples\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Use .predict() to determine the labels of samples \cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 labels\cf4 =\cf5 model\cf4 .\cf6 predict\cf4 (\cf5 samples\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Print the labels\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf5 labels\cf4 )\cb1 \
\
\'97 \cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 numpy\cf4  \cf2 as\cf4  \cf5 np\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\cf5 \cb3 model\cf4  = \cf5 KMeans\cf4 (\cf5 n_clusters\cf4 =\cf5 3\cf4 )\cb1 \
\
\cf5 \cb3 model\cf4 .\cf6 fit\cf4 (\cf5 samples\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Store the new Iris measurements\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 new_samples\cf4  = \cf5 np\cf4 .\cf6 array\cf4 ([[\cf5 5.7\cf4 , \cf5 4.4\cf4 , \cf5 1.5\cf4 , \cf5 0.4\cf4 ],\cb1 \
\cb3    [\cf5 6.5\cf4 , \cf5 3\cf4 . , \cf5 5.5\cf4 , \cf5 0.4\cf4 ],\cb1 \
\cb3    [\cf5 5.8\cf4 , \cf5 2.7\cf4 , \cf5 5.1\cf4 , \cf5 1.9\cf4 ]])\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 #print(new_samples)\cf4 \cb1 \
\
\cf7 \cb3 # Predict labels for the new_samples\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf5 model\cf4 .\cf6 predict\cf4 (\cf5 new_samples\cf4 ))\cb1 \
\
\'97\cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\cf5 \cb3 model\cf4  = \cf5 KMeans\cf4 (\cf5 n_clusters\cf4 =\cf5 3\cf4 )\cb1 \
\
\cf5 \cb3 model\cf4 .\cf6 fit\cf4 (\cf5 samples\cf4 )\cb1 \
\
\cf5 \cb3 labels\cf4  = \cf5 model\cf4 .\cf6 predict\cf4 (\cf5 samples\cf4 )\cb1 \
\
\cb3 print(\cf5 labels\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Make a scatter plot of x and y and using labels to define the colors\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 x\cf4 =\cf5 samples\cf4 [:,\cf5 0\cf4 ]\cb1 \
\cf5 \cb3 y\cf4 =\cf5 samples\cf4 [:,\cf5 1\cf4 ]\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 scatter\cf4 (\cf5 x\cf4 ,\cf5 y\cf4 , \cf5 c\cf4 =\cf5 labels\cf4 , \cf5 alpha\cf4 =\cf5 0.5\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 xlabel\cf4 (\cf8 'sepal length (cm)'\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 ylabel\cf4 (\cf8 'sepal width (cm)'\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 show\cf4 ()\cb1 \
\
\'97\cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 numpy\cf4  \cf2 as\cf4  \cf5 np\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 pandas\cf4  \cf2 as\cf4  \cf5 pd\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\cf5 \cb3 target\cf4  = \cf5 iris\cf4 .\cf6 target\cf4 \cb1 \
\
\cf5 \cb3 model\cf4  = \cf5 KMeans\cf4 (\cf5 n_clusters\cf4 =\cf5 3\cf4 )\cb1 \
\
\cf5 \cb3 model\cf4 .\cf6 fit\cf4 (\cf5 samples\cf4 )\cb1 \
\
\cf5 \cb3 labels\cf4  = \cf5 model\cf4 .\cf6 predict\cf4 (\cf5 samples\cf4 )\cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Code starts here:\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 species\cf4  = \cf5 np\cf4 .\cf6 chararray\cf4 (\cf5 target\cf4 .\cf6 shape\cf4 , \cf5 itemsize\cf4 =\cf5 150\cf4 )\cb1 \
\
\cf2 \cb3 for\cf4  \cf5 i\cf4  \cf2 in\cf4  range(len(\cf5 samples\cf4 )):\cb1 \
\cb3   \cf2 if\cf4  \cf5 target\cf4 [\cf5 i\cf4 ] == \cf5 0\cf4 :\cb1 \
\cb3     \cf5 species\cf4 [\cf5 i\cf4 ] = \cf8 'setosa'\cf4 \cb1 \
\cb3   \cf2 elif\cf4  \cf5 target\cf4 [\cf5 i\cf4 ] == \cf5 1\cf4 :\cb1 \
\cb3     \cf5 species\cf4 [\cf5 i\cf4 ] = \cf8 'versicolor'\cf4 \cb1 \
\cb3   \cf2 elif\cf4  \cf5 target\cf4 [\cf5 i\cf4 ] == \cf5 2\cf4 : \cb1 \
\cb3     \cf5 species\cf4 [\cf5 i\cf4 ] = \cf8 'virginica'\cf4 \cb1 \
\
\cf5 \cb3 df\cf4  = \cf5 pd\cf4 .\cf6 DataFrame\cf4 (\{\cf8 'labels'\cf4 : \cf5 labels\cf4 , \cf8 'species'\cf4 : \cf5 species\cf4 \})\cb1 \
\
\cb3 print(\cf5 df\cf4 )\cb1 \
\
\cf5 \cb3 ct\cf4  = \cf5 pd\cf4 .\cf6 crosstab\cf4 (\cf5 df\cf4 [\cf8 'labels'\cf4 ], \cf5 df\cf4 [\cf8 'species'\cf4 ])\cb1 \
\cb3 print(\cf5 ct\cf4 )\cb1 \
\
\'97\cf2 \cb3 import\cf4  \cf5 codecademylib3_seaborn\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 matplotlib\cf4 .\cf6 pyplot\cf4  \cf2 as\cf4  \cf5 plt\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 numpy\cf4  \cf2 as\cf4  \cf5 np\cf4 \cb1 \
\cf2 \cb3 import\cf4  \cf5 pandas\cf4  \cf2 as\cf4  \cf5 pd\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4  \cf2 import\cf4  \cf5 datasets\cf4 \cb1 \
\cf2 \cb3 from\cf4  \cf5 sklearn\cf4 .\cf6 cluster\cf4  \cf2 import\cf4  \cf5 KMeans\cf4 \cb1 \
\
\cf5 \cb3 iris\cf4  = \cf5 datasets\cf4 .\cf6 load_iris\cf4 ()\cb1 \
\
\cf5 \cb3 samples\cf4  = \cf5 iris\cf4 .\cf6 data\cf4 \cb1 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf7 \cb3 # Code Start here:\cf4 \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 num_clusters\cf4 =[\cf5 1\cf4 ,\cf5 2\cf4 ,\cf5 3\cf4 ,\cf5 4\cf4 ,\cf5 5\cf4 ,\cf5 6\cf4 ,\cf5 7\cf4 ,\cf5 8\cf4 ]\cb1 \
\cf5 \cb3 inertias\cf4 =[]\cb1 \
\
\cf2 \cb3 for\cf4  \cf5 k\cf4  \cf2 in\cf4  \cf5 num_clusters\cf4 :\cb1 \
\cb3   \cf5 model\cf4  = \cf5 KMeans\cf4 (\cf5 n_clusters\cf4 =\cf5 k\cf4 )\cb1 \
\cb3   \cf5 model\cf4 .\cf6 fit\cf4 (\cf5 samples\cf4 )\cb1 \
\cb3   \cf5 inertias\cf4 .\cf6 append\cf4 (\cf5 model\cf4 .\cf6 inertia_\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 plot\cf4 (\cf5 num_clusters\cf4 , \cf5 inertias\cf4 , \cf8 '-o'\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 xlabel\cf4 (\cf8 'Number of Clusters (k)'\cf4 )\cb1 \
\cf5 \cb3 plt\cf4 .\cf6 ylabel\cf4 (\cf8 'Inertia'\cf4 )\cb1 \
\
\cf5 \cb3 plt\cf4 .\cf6 show\cf4 ()\cb1 \
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}